{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fb6fb226",
   "metadata": {},
   "outputs": [],
   "source": [
    "# import all packages and set plots to be embedded inline\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sb\n",
    "\n",
    "%matplotlib inline\n",
    "# suppress warnings from final output\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "# set up to view all the info of the columns\n",
    "pd.set_option('display.max_columns', None)\n",
    "pd.set_option('display.max_rows', None)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "33bd07bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv('marketing_data.csv.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "c7d1b294",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>...</th>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Response</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1826</td>\n",
       "      <td>1970</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>$84,835.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6/16/14</td>\n",
       "      <td>0</td>\n",
       "      <td>189</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1961</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>$57,091.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6/15/14</td>\n",
       "      <td>0</td>\n",
       "      <td>464</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>CA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10476</td>\n",
       "      <td>1958</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Married</td>\n",
       "      <td>$67,267.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5/13/14</td>\n",
       "      <td>0</td>\n",
       "      <td>134</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>US</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1386</td>\n",
       "      <td>1967</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Together</td>\n",
       "      <td>$32,474.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11/5/2014</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>AUS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5371</td>\n",
       "      <td>1989</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>$21,474.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>8/4/2014</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ID  Year_Birth   Education Marital_Status      Income  Kidhome  \\\n",
       "0   1826        1970  Graduation       Divorced  $84,835.00        0   \n",
       "1      1        1961  Graduation         Single  $57,091.00        0   \n",
       "2  10476        1958  Graduation        Married  $67,267.00        0   \n",
       "3   1386        1967  Graduation       Together  $32,474.00        1   \n",
       "4   5371        1989  Graduation         Single  $21,474.00        1   \n",
       "\n",
       "   Teenhome Dt_Customer  Recency  MntWines  ...  NumStorePurchases  \\\n",
       "0         0     6/16/14        0       189  ...                  6   \n",
       "1         0     6/15/14        0       464  ...                  7   \n",
       "2         1     5/13/14        0       134  ...                  5   \n",
       "3         1   11/5/2014        0        10  ...                  2   \n",
       "4         0    8/4/2014        0         6  ...                  2   \n",
       "\n",
       "   NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  AcceptedCmp1  \\\n",
       "0                  1             0             0             0             0   \n",
       "1                  5             0             0             0             0   \n",
       "2                  2             0             0             0             0   \n",
       "3                  7             0             0             0             0   \n",
       "4                  7             1             0             0             0   \n",
       "\n",
       "   AcceptedCmp2  Response  Complain  Country  \n",
       "0             0         1         0       SP  \n",
       "1             1         1         0       CA  \n",
       "2             0         0         0       US  \n",
       "3             0         0         0      AUS  \n",
       "4             0         1         0       SP  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "52d6dca4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>MntSweetProducts</th>\n",
       "      <th>MntGoldProds</th>\n",
       "      <th>NumDealsPurchases</th>\n",
       "      <th>NumWebPurchases</th>\n",
       "      <th>NumCatalogPurchases</th>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Response</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Country</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2235</th>\n",
       "      <td>10142</td>\n",
       "      <td>1976</td>\n",
       "      <td>PhD</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>$66,476.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7/3/2013</td>\n",
       "      <td>99</td>\n",
       "      <td>372</td>\n",
       "      <td>18</td>\n",
       "      <td>126</td>\n",
       "      <td>47</td>\n",
       "      <td>48</td>\n",
       "      <td>78</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>US</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2236</th>\n",
       "      <td>5263</td>\n",
       "      <td>1977</td>\n",
       "      <td>2n Cycle</td>\n",
       "      <td>Married</td>\n",
       "      <td>$31,056.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1/22/13</td>\n",
       "      <td>99</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2237</th>\n",
       "      <td>22</td>\n",
       "      <td>1976</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>$46,310.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3/12/2012</td>\n",
       "      <td>99</td>\n",
       "      <td>185</td>\n",
       "      <td>2</td>\n",
       "      <td>88</td>\n",
       "      <td>15</td>\n",
       "      <td>5</td>\n",
       "      <td>14</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2238</th>\n",
       "      <td>528</td>\n",
       "      <td>1978</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Married</td>\n",
       "      <td>$65,819.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11/29/12</td>\n",
       "      <td>99</td>\n",
       "      <td>267</td>\n",
       "      <td>38</td>\n",
       "      <td>701</td>\n",
       "      <td>149</td>\n",
       "      <td>165</td>\n",
       "      <td>63</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>IND</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2239</th>\n",
       "      <td>4070</td>\n",
       "      <td>1969</td>\n",
       "      <td>PhD</td>\n",
       "      <td>Married</td>\n",
       "      <td>$94,871.00</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1/9/2012</td>\n",
       "      <td>99</td>\n",
       "      <td>169</td>\n",
       "      <td>24</td>\n",
       "      <td>553</td>\n",
       "      <td>188</td>\n",
       "      <td>0</td>\n",
       "      <td>144</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>CA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         ID  Year_Birth   Education Marital_Status      Income  Kidhome  \\\n",
       "2235  10142        1976         PhD       Divorced  $66,476.00        0   \n",
       "2236   5263        1977    2n Cycle        Married  $31,056.00        1   \n",
       "2237     22        1976  Graduation       Divorced  $46,310.00        1   \n",
       "2238    528        1978  Graduation        Married  $65,819.00        0   \n",
       "2239   4070        1969         PhD        Married  $94,871.00        0   \n",
       "\n",
       "      Teenhome Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n",
       "2235         1    7/3/2013       99       372         18              126   \n",
       "2236         0     1/22/13       99         5         10               13   \n",
       "2237         0   3/12/2012       99       185          2               88   \n",
       "2238         0    11/29/12       99       267         38              701   \n",
       "2239         2    1/9/2012       99       169         24              553   \n",
       "\n",
       "      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n",
       "2235               47                48            78                  2   \n",
       "2236                3                 8            16                  1   \n",
       "2237               15                 5            14                  2   \n",
       "2238              149               165            63                  1   \n",
       "2239              188                 0           144                  1   \n",
       "\n",
       "      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n",
       "2235                5                    2                 11   \n",
       "2236                1                    0                  3   \n",
       "2237                6                    1                  5   \n",
       "2238                5                    4                 10   \n",
       "2239                8                    5                  4   \n",
       "\n",
       "      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n",
       "2235                  4             0             0             0   \n",
       "2236                  8             0             0             0   \n",
       "2237                  8             0             0             0   \n",
       "2238                  3             0             0             0   \n",
       "2239                  7             0             1             1   \n",
       "\n",
       "      AcceptedCmp1  AcceptedCmp2  Response  Complain Country  \n",
       "2235             0             0         0         0      US  \n",
       "2236             0             0         0         0      SP  \n",
       "2237             0             0         0         0      SP  \n",
       "2238             0             0         0         0     IND  \n",
       "2239             0             0         1         0      CA  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0b08fb5a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def basic_info(df):\n",
    "    print(\"This dataset has \", df.shape[1], \" columns and \", df.shape[0], \" rows.\")\n",
    "    print(\"This dataset has \", df[df.duplicated()].shape[0], \" duplicated rows.\")\n",
    "    print(\" \")\n",
    "    print(\"Descriptive statistics of the numeric features in the dataset: \")\n",
    "    print(\" \")\n",
    "    print(df.describe())\n",
    "    print(\" \")\n",
    "    print(\"Information about this dataset: \")\n",
    "    print(\" \")\n",
    "    print(df.info())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "61212028",
   "metadata": {},
   "outputs": [],
   "source": [
    "basic_info(df)\n",
    "\n",
    "df_copy = df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8cc12061",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Year_Birth', 'Education', 'Marital_Status', 'Income', 'Kidhome',\n",
       "       'Teenhome', 'Dt_Customer', 'Recency', 'MntWines', 'MntFruits',\n",
       "       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
       "       'MntGoldProds', 'NumDealsPurchases', 'NumWebPurchases',\n",
       "       'NumCatalogPurchases', 'NumStorePurchases', 'NumWebVisitsMonth',\n",
       "       'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',\n",
       "       'AcceptedCmp2', 'Response', 'Complain', 'Country'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_copy.rename(columns={' Income ':'Income'}, inplace=True)\n",
    "\n",
    "df_copy.columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "96d707fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "413     5323300\n",
       "1993    5943200\n",
       "220     5528200\n",
       "58      8371500\n",
       "1698    3063100\n",
       "Name: Income, dtype: object"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_copy.Income = df_copy.Income.str.strip('$')\n",
    "df_copy.Income = df_copy.Income.str.replace(\".\", \"\")\n",
    "df_copy.Income = df_copy.Income.str.replace(\",\", \"\")\n",
    "df_copy.Income = df_copy.Income.str.replace(\"00 \", \"\")\n",
    "\n",
    "df_copy.Income.sample(5)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9184e324",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2240 entries, 0 to 2239\n",
      "Data columns (total 28 columns):\n",
      " #   Column               Non-Null Count  Dtype \n",
      "---  ------               --------------  ----- \n",
      " 0   ID                   2240 non-null   int64 \n",
      " 1   Year_Birth           2240 non-null   int64 \n",
      " 2   Education            2240 non-null   object\n",
      " 3   Marital_Status       2240 non-null   object\n",
      " 4   Income               2216 non-null   object\n",
      " 5   Kidhome              2240 non-null   int64 \n",
      " 6   Teenhome             2240 non-null   int64 \n",
      " 7   Dt_Customer          2240 non-null   object\n",
      " 8   Recency              2240 non-null   int64 \n",
      " 9   MntWines             2240 non-null   int64 \n",
      " 10  MntFruits            2240 non-null   int64 \n",
      " 11  MntMeatProducts      2240 non-null   int64 \n",
      " 12  MntFishProducts      2240 non-null   int64 \n",
      " 13  MntSweetProducts     2240 non-null   int64 \n",
      " 14  MntGoldProds         2240 non-null   int64 \n",
      " 15  NumDealsPurchases    2240 non-null   int64 \n",
      " 16  NumWebPurchases      2240 non-null   int64 \n",
      " 17  NumCatalogPurchases  2240 non-null   int64 \n",
      " 18  NumStorePurchases    2240 non-null   int64 \n",
      " 19  NumWebVisitsMonth    2240 non-null   int64 \n",
      " 20  AcceptedCmp3         2240 non-null   int64 \n",
      " 21  AcceptedCmp4         2240 non-null   int64 \n",
      " 22  AcceptedCmp5         2240 non-null   int64 \n",
      " 23  AcceptedCmp1         2240 non-null   int64 \n",
      " 24  AcceptedCmp2         2240 non-null   int64 \n",
      " 25  Response             2240 non-null   int64 \n",
      " 26  Complain             2240 non-null   int64 \n",
      " 27  Country              2240 non-null   object\n",
      "dtypes: int64(23), object(5)\n",
      "memory usage: 490.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df_copy.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d779a6fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "# divide the data into two dataframes: one has income values, and the other doesn't.\n",
    "have_income = df_copy[df_copy.Income.isnull()==False]\n",
    "missing_income = df_copy[df_copy.Income.isnull()==True]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7f4c1ef1",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "invalid literal for int() with base 10: '51380.0'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Input \u001b[1;32mIn [18]\u001b[0m, in \u001b[0;36m<cell line: 8>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      5\u001b[0m missing_income\u001b[38;5;241m.\u001b[39mIncome \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mstr\u001b[39m(have_income\u001b[38;5;241m.\u001b[39mIncome\u001b[38;5;241m.\u001b[39mmedian())\n\u001b[0;32m      7\u001b[0m missing_income\u001b[38;5;241m.\u001b[39mIncome \u001b[38;5;241m=\u001b[39m missing_income\u001b[38;5;241m.\u001b[39mIncome\u001b[38;5;241m.\u001b[39mstr\u001b[38;5;241m.\u001b[39mreplace(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m.5\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m----> 8\u001b[0m missing_income\u001b[38;5;241m.\u001b[39mIncome \u001b[38;5;241m=\u001b[39m \u001b[43mmissing_income\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mIncome\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mint\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\generic.py:5912\u001b[0m, in \u001b[0;36mNDFrame.astype\u001b[1;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[0;32m   5905\u001b[0m     results \u001b[38;5;241m=\u001b[39m [\n\u001b[0;32m   5906\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39miloc[:, i]\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n\u001b[0;32m   5907\u001b[0m         \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns))\n\u001b[0;32m   5908\u001b[0m     ]\n\u001b[0;32m   5910\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m   5911\u001b[0m     \u001b[38;5;66;03m# else, only a single dtype is given\u001b[39;00m\n\u001b[1;32m-> 5912\u001b[0m     new_data \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_mgr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   5913\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_constructor(new_data)\u001b[38;5;241m.\u001b[39m__finalize__(\u001b[38;5;28mself\u001b[39m, method\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mastype\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m   5915\u001b[0m \u001b[38;5;66;03m# GH 33113: handle empty frame or series\u001b[39;00m\n",
      "File \u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\internals\\managers.py:419\u001b[0m, in \u001b[0;36mBaseBlockManager.astype\u001b[1;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[0;32m    418\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mastype\u001b[39m(\u001b[38;5;28mself\u001b[39m: T, dtype, copy: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m, errors: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m T:\n\u001b[1;32m--> 419\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mastype\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\internals\\managers.py:304\u001b[0m, in \u001b[0;36mBaseBlockManager.apply\u001b[1;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[0;32m    302\u001b[0m         applied \u001b[38;5;241m=\u001b[39m b\u001b[38;5;241m.\u001b[39mapply(f, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    303\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 304\u001b[0m         applied \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mgetattr\u001b[39m(b, f)(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    305\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mTypeError\u001b[39;00m, \u001b[38;5;167;01mNotImplementedError\u001b[39;00m):\n\u001b[0;32m    306\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m ignore_failures:\n",
      "File \u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\internals\\blocks.py:580\u001b[0m, in \u001b[0;36mBlock.astype\u001b[1;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[0;32m    562\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m    563\u001b[0m \u001b[38;5;124;03mCoerce to the new dtype.\u001b[39;00m\n\u001b[0;32m    564\u001b[0m \n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    576\u001b[0m \u001b[38;5;124;03mBlock\u001b[39;00m\n\u001b[0;32m    577\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m    578\u001b[0m values \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mvalues\n\u001b[1;32m--> 580\u001b[0m new_values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_array_safe\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    582\u001b[0m new_values \u001b[38;5;241m=\u001b[39m maybe_coerce_values(new_values)\n\u001b[0;32m    583\u001b[0m newb \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmake_block(new_values)\n",
      "File \u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py:1292\u001b[0m, in \u001b[0;36mastype_array_safe\u001b[1;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[0;32m   1289\u001b[0m     dtype \u001b[38;5;241m=\u001b[39m dtype\u001b[38;5;241m.\u001b[39mnumpy_dtype\n\u001b[0;32m   1291\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 1292\u001b[0m     new_values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_array\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1293\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mValueError\u001b[39;00m, \u001b[38;5;167;01mTypeError\u001b[39;00m):\n\u001b[0;32m   1294\u001b[0m     \u001b[38;5;66;03m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[39;00m\n\u001b[0;32m   1295\u001b[0m     \u001b[38;5;66;03m#  trying to convert to float\u001b[39;00m\n\u001b[0;32m   1296\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n",
      "File \u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py:1237\u001b[0m, in \u001b[0;36mastype_array\u001b[1;34m(values, dtype, copy)\u001b[0m\n\u001b[0;32m   1234\u001b[0m     values \u001b[38;5;241m=\u001b[39m values\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n\u001b[0;32m   1236\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1237\u001b[0m     values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_nansafe\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1239\u001b[0m \u001b[38;5;66;03m# in pandas we don't store numpy str dtypes, so convert to object\u001b[39;00m\n\u001b[0;32m   1240\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(dtype, np\u001b[38;5;241m.\u001b[39mdtype) \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28missubclass\u001b[39m(values\u001b[38;5;241m.\u001b[39mdtype\u001b[38;5;241m.\u001b[39mtype, \u001b[38;5;28mstr\u001b[39m):\n",
      "File \u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py:1154\u001b[0m, in \u001b[0;36mastype_nansafe\u001b[1;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[0;32m   1150\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m is_object_dtype(arr\u001b[38;5;241m.\u001b[39mdtype):\n\u001b[0;32m   1151\u001b[0m \n\u001b[0;32m   1152\u001b[0m     \u001b[38;5;66;03m# work around NumPy brokenness, #1987\u001b[39;00m\n\u001b[0;32m   1153\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m np\u001b[38;5;241m.\u001b[39missubdtype(dtype\u001b[38;5;241m.\u001b[39mtype, np\u001b[38;5;241m.\u001b[39minteger):\n\u001b[1;32m-> 1154\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mlib\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype_intsafe\u001b[49m\u001b[43m(\u001b[49m\u001b[43marr\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1156\u001b[0m     \u001b[38;5;66;03m# if we have a datetime/timedelta array of objects\u001b[39;00m\n\u001b[0;32m   1157\u001b[0m     \u001b[38;5;66;03m# then coerce to a proper dtype and recall astype_nansafe\u001b[39;00m\n\u001b[0;32m   1159\u001b[0m     \u001b[38;5;28;01melif\u001b[39;00m is_datetime64_dtype(dtype):\n",
      "File \u001b[1;32mC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pandas\\_libs\\lib.pyx:668\u001b[0m, in \u001b[0;36mpandas._libs.lib.astype_intsafe\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: invalid literal for int() with base 10: '51380.0'"
     ]
    }
   ],
   "source": [
    "# Convert the one that has income to int type\n",
    "have_income.Income = have_income.Income.astype(int)\n",
    "\n",
    "# give a string value of \"0\" to missing value, then we can convert it into int type\n",
    "missing_income.Income = str(have_income.Income.median())\n",
    "\n",
    "missing_income.Income = missing_income.Income.str.replace(\".5\", \"\")\n",
    "missing_income.Income = missing_income.Income.astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "46dae854",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#combine the data\n",
    "df_copy = missing_income.append(have_income)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e490f28a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 2240 entries, 134 to 2239\n",
      "Data columns (total 28 columns):\n",
      " #   Column               Non-Null Count  Dtype \n",
      "---  ------               --------------  ----- \n",
      " 0   ID                   2240 non-null   int64 \n",
      " 1   Year_Birth           2240 non-null   int64 \n",
      " 2   Education            2240 non-null   object\n",
      " 3   Marital_Status       2240 non-null   object\n",
      " 4   Income               2240 non-null   object\n",
      " 5   Kidhome              2240 non-null   int64 \n",
      " 6   Teenhome             2240 non-null   int64 \n",
      " 7   Dt_Customer          2240 non-null   object\n",
      " 8   Recency              2240 non-null   int64 \n",
      " 9   MntWines             2240 non-null   int64 \n",
      " 10  MntFruits            2240 non-null   int64 \n",
      " 11  MntMeatProducts      2240 non-null   int64 \n",
      " 12  MntFishProducts      2240 non-null   int64 \n",
      " 13  MntSweetProducts     2240 non-null   int64 \n",
      " 14  MntGoldProds         2240 non-null   int64 \n",
      " 15  NumDealsPurchases    2240 non-null   int64 \n",
      " 16  NumWebPurchases      2240 non-null   int64 \n",
      " 17  NumCatalogPurchases  2240 non-null   int64 \n",
      " 18  NumStorePurchases    2240 non-null   int64 \n",
      " 19  NumWebVisitsMonth    2240 non-null   int64 \n",
      " 20  AcceptedCmp3         2240 non-null   int64 \n",
      " 21  AcceptedCmp4         2240 non-null   int64 \n",
      " 22  AcceptedCmp5         2240 non-null   int64 \n",
      " 23  AcceptedCmp1         2240 non-null   int64 \n",
      " 24  AcceptedCmp2         2240 non-null   int64 \n",
      " 25  Response             2240 non-null   int64 \n",
      " 26  Complain             2240 non-null   int64 \n",
      " 27  Country              2240 non-null   object\n",
      "dtypes: int64(23), object(5)\n",
      "memory usage: 507.5+ KB\n"
     ]
    }
   ],
   "source": [
    "\n",
    "df_copy.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "fe91eedc",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_copy.Dt_Customer = pd.to_datetime(df_copy.Dt_Customer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "dd051cae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 2240 entries, 134 to 2239\n",
      "Data columns (total 28 columns):\n",
      " #   Column               Non-Null Count  Dtype         \n",
      "---  ------               --------------  -----         \n",
      " 0   ID                   2240 non-null   int64         \n",
      " 1   Year_Birth           2240 non-null   int64         \n",
      " 2   Education            2240 non-null   object        \n",
      " 3   Marital_Status       2240 non-null   object        \n",
      " 4   Income               2240 non-null   object        \n",
      " 5   Kidhome              2240 non-null   int64         \n",
      " 6   Teenhome             2240 non-null   int64         \n",
      " 7   Dt_Customer          2240 non-null   datetime64[ns]\n",
      " 8   Recency              2240 non-null   int64         \n",
      " 9   MntWines             2240 non-null   int64         \n",
      " 10  MntFruits            2240 non-null   int64         \n",
      " 11  MntMeatProducts      2240 non-null   int64         \n",
      " 12  MntFishProducts      2240 non-null   int64         \n",
      " 13  MntSweetProducts     2240 non-null   int64         \n",
      " 14  MntGoldProds         2240 non-null   int64         \n",
      " 15  NumDealsPurchases    2240 non-null   int64         \n",
      " 16  NumWebPurchases      2240 non-null   int64         \n",
      " 17  NumCatalogPurchases  2240 non-null   int64         \n",
      " 18  NumStorePurchases    2240 non-null   int64         \n",
      " 19  NumWebVisitsMonth    2240 non-null   int64         \n",
      " 20  AcceptedCmp3         2240 non-null   int64         \n",
      " 21  AcceptedCmp4         2240 non-null   int64         \n",
      " 22  AcceptedCmp5         2240 non-null   int64         \n",
      " 23  AcceptedCmp1         2240 non-null   int64         \n",
      " 24  AcceptedCmp2         2240 non-null   int64         \n",
      " 25  Response             2240 non-null   int64         \n",
      " 26  Complain             2240 non-null   int64         \n",
      " 27  Country              2240 non-null   object        \n",
      "dtypes: datetime64[ns](1), int64(23), object(4)\n",
      "memory usage: 507.5+ KB\n"
     ]
    }
   ],
   "source": [
    "\n",
    "df_copy.info()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "29166a07",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# store the file\n",
    "df_copy.reset_index(drop=True)\n",
    "df_copy.to_csv('clean_df.csv', index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "889d84c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#load data\n",
    "df = pd.read_csv('clean_df.csv')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "8290cfe8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2240 entries, 0 to 2239\n",
      "Data columns (total 28 columns):\n",
      " #   Column               Non-Null Count  Dtype  \n",
      "---  ------               --------------  -----  \n",
      " 0   ID                   2240 non-null   int64  \n",
      " 1   Year_Birth           2240 non-null   int64  \n",
      " 2   Education            2240 non-null   object \n",
      " 3   Marital_Status       2240 non-null   object \n",
      " 4   Income               2240 non-null   float64\n",
      " 5   Kidhome              2240 non-null   int64  \n",
      " 6   Teenhome             2240 non-null   int64  \n",
      " 7   Dt_Customer          2240 non-null   object \n",
      " 8   Recency              2240 non-null   int64  \n",
      " 9   MntWines             2240 non-null   int64  \n",
      " 10  MntFruits            2240 non-null   int64  \n",
      " 11  MntMeatProducts      2240 non-null   int64  \n",
      " 12  MntFishProducts      2240 non-null   int64  \n",
      " 13  MntSweetProducts     2240 non-null   int64  \n",
      " 14  MntGoldProds         2240 non-null   int64  \n",
      " 15  NumDealsPurchases    2240 non-null   int64  \n",
      " 16  NumWebPurchases      2240 non-null   int64  \n",
      " 17  NumCatalogPurchases  2240 non-null   int64  \n",
      " 18  NumStorePurchases    2240 non-null   int64  \n",
      " 19  NumWebVisitsMonth    2240 non-null   int64  \n",
      " 20  AcceptedCmp3         2240 non-null   int64  \n",
      " 21  AcceptedCmp4         2240 non-null   int64  \n",
      " 22  AcceptedCmp5         2240 non-null   int64  \n",
      " 23  AcceptedCmp1         2240 non-null   int64  \n",
      " 24  AcceptedCmp2         2240 non-null   int64  \n",
      " 25  Response             2240 non-null   int64  \n",
      " 26  Complain             2240 non-null   int64  \n",
      " 27  Country              2240 non-null   object \n",
      "dtypes: float64(1), int64(23), object(4)\n",
      "memory usage: 490.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "79ae284e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x1008 with 16 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "df_to_plot = df.drop(columns=['ID', 'AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'Response', 'Complain']).select_dtypes(include=np.number)\n",
    "\n",
    "df_to_plot.plot(subplots=True, layout=(4,4), kind='box', figsize=(12,14), patch_artist=True)\n",
    "plt.suptitle('Find Outliers', fontsize=15, y=0.9)\n",
    "plt.savefig('boxplots.png', bbox_inches='tight')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "7f13c198",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    2240.000000\n",
       "mean     1968.805804\n",
       "std        11.984069\n",
       "min      1893.000000\n",
       "25%      1959.000000\n",
       "50%      1970.000000\n",
       "75%      1977.000000\n",
       "max      1996.000000\n",
       "Name: Year_Birth, dtype: float64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Year_Birth.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "396abe5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    2237.000000\n",
       "mean     1968.901654\n",
       "std        11.701917\n",
       "min      1940.000000\n",
       "25%      1959.000000\n",
       "50%      1970.000000\n",
       "75%      1977.000000\n",
       "max      1996.000000\n",
       "Name: Year_Birth, dtype: float64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Remove outliers in year_birth\n",
    "new_df = df[df.Year_Birth >= (df.Year_Birth.mean()-3*df.Year_Birth.std())]\n",
    "new_df.Year_Birth.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "dc36d05d",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "new_df.Dt_Customer = pd.to_datetime(new_df.Dt_Customer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f948c7b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create new features\n",
    "new_df[\"Join_year\"] = new_df.Dt_Customer.dt.year\n",
    "new_df[\"Join_month\"] = new_df.Dt_Customer.dt.month\n",
    "new_df[\"Join_weekday\"] = new_df.Dt_Customer.dt.weekday\n",
    "new_df[\"Minorhome\"] = new_df.Kidhome + new_df.Teenhome\n",
    "new_df['Total_Mnt'] = new_df.MntWines+ new_df.MntFruits+ new_df.MntMeatProducts+ new_df.MntFishProducts+ new_df.MntSweetProducts+ new_df.MntGoldProds \n",
    "new_df['Total_num_purchase'] = new_df.NumDealsPurchases+ new_df.NumWebPurchases+ new_df.NumCatalogPurchases+ new_df.NumStorePurchases+ new_df.NumWebVisitsMonth \n",
    "new_df['Total_accept'] = new_df.AcceptedCmp1 + new_df.AcceptedCmp2 + new_df.AcceptedCmp2 + new_df.AcceptedCmp2  + new_df.AcceptedCmp3 + new_df.AcceptedCmp4 + new_df.AcceptedCmp5 + new_df.Response\n",
    "new_df['AOV'] = new_df.Total_Mnt/new_df.Total_num_purchase\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "268c3c23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Year_Birth</th>\n",
       "      <th>Education</th>\n",
       "      <th>Marital_Status</th>\n",
       "      <th>Income</th>\n",
       "      <th>Kidhome</th>\n",
       "      <th>Teenhome</th>\n",
       "      <th>Dt_Customer</th>\n",
       "      <th>Recency</th>\n",
       "      <th>MntWines</th>\n",
       "      <th>MntFruits</th>\n",
       "      <th>MntMeatProducts</th>\n",
       "      <th>MntFishProducts</th>\n",
       "      <th>MntSweetProducts</th>\n",
       "      <th>MntGoldProds</th>\n",
       "      <th>NumDealsPurchases</th>\n",
       "      <th>NumWebPurchases</th>\n",
       "      <th>NumCatalogPurchases</th>\n",
       "      <th>NumStorePurchases</th>\n",
       "      <th>NumWebVisitsMonth</th>\n",
       "      <th>AcceptedCmp3</th>\n",
       "      <th>AcceptedCmp4</th>\n",
       "      <th>AcceptedCmp5</th>\n",
       "      <th>AcceptedCmp1</th>\n",
       "      <th>AcceptedCmp2</th>\n",
       "      <th>Response</th>\n",
       "      <th>Complain</th>\n",
       "      <th>Country</th>\n",
       "      <th>Join_year</th>\n",
       "      <th>Join_month</th>\n",
       "      <th>Join_weekday</th>\n",
       "      <th>Minorhome</th>\n",
       "      <th>Total_Mnt</th>\n",
       "      <th>Total_num_purchase</th>\n",
       "      <th>Total_accept</th>\n",
       "      <th>AOV</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1361</th>\n",
       "      <td>3673</td>\n",
       "      <td>1971</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>5523900.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2013-07-14</td>\n",
       "      <td>59</td>\n",
       "      <td>371</td>\n",
       "      <td>17</td>\n",
       "      <td>238</td>\n",
       "      <td>23</td>\n",
       "      <td>24</td>\n",
       "      <td>106</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SA</td>\n",
       "      <td>2013</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>779</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "      <td>25.129032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1558</th>\n",
       "      <td>378</td>\n",
       "      <td>1971</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Married</td>\n",
       "      <td>5253100.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2012-12-30</td>\n",
       "      <td>68</td>\n",
       "      <td>283</td>\n",
       "      <td>112</td>\n",
       "      <td>151</td>\n",
       "      <td>51</td>\n",
       "      <td>72</td>\n",
       "      <td>125</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "      <td>2012</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>794</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>29.407407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1054</th>\n",
       "      <td>5788</td>\n",
       "      <td>1972</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Together</td>\n",
       "      <td>4605300.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2013-02-17</td>\n",
       "      <td>46</td>\n",
       "      <td>56</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>19</td>\n",
       "      <td>7</td>\n",
       "      <td>25</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>GER</td>\n",
       "      <td>2013</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>209</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>12.294118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>4827</td>\n",
       "      <td>1956</td>\n",
       "      <td>PhD</td>\n",
       "      <td>Single</td>\n",
       "      <td>5499800.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2013-10-03</td>\n",
       "      <td>3</td>\n",
       "      <td>154</td>\n",
       "      <td>22</td>\n",
       "      <td>202</td>\n",
       "      <td>39</td>\n",
       "      <td>30</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "      <td>2013</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>455</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>18.958333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1869</th>\n",
       "      <td>4432</td>\n",
       "      <td>1976</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>3161500.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2013-03-16</td>\n",
       "      <td>82</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "      <td>2013</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>3.642857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1325</th>\n",
       "      <td>8724</td>\n",
       "      <td>1982</td>\n",
       "      <td>Graduation</td>\n",
       "      <td>Single</td>\n",
       "      <td>2856700.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2013-06-17</td>\n",
       "      <td>57</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SP</td>\n",
       "      <td>2013</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>46</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>3.538462</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID  Year_Birth   Education Marital_Status     Income  Kidhome  \\\n",
       "1361  3673        1971  Graduation         Single  5523900.0        0   \n",
       "1558   378        1971  Graduation        Married  5253100.0        0   \n",
       "1054  5788        1972  Graduation       Together  4605300.0        1   \n",
       "123   4827        1956         PhD         Single  5499800.0        0   \n",
       "1869  4432        1976  Graduation       Divorced  3161500.0        1   \n",
       "1325  8724        1982  Graduation         Single  2856700.0        1   \n",
       "\n",
       "      Teenhome Dt_Customer  Recency  MntWines  MntFruits  MntMeatProducts  \\\n",
       "1361         1  2013-07-14       59       371         17              238   \n",
       "1558         0  2012-12-30       68       283        112              151   \n",
       "1054         0  2013-02-17       46        56         10               92   \n",
       "123          1  2013-10-03        3       154         22              202   \n",
       "1869         0  2013-03-16       82         2          3               20   \n",
       "1325         0  2013-06-17       57        11          3               22   \n",
       "\n",
       "      MntFishProducts  MntSweetProducts  MntGoldProds  NumDealsPurchases  \\\n",
       "1361               23                24           106                  3   \n",
       "1558               51                72           125                  2   \n",
       "1054               19                 7            25                  3   \n",
       "123                39                30             8                  5   \n",
       "1869                6                11             9                  2   \n",
       "1325                2                 2             6                  2   \n",
       "\n",
       "      NumWebPurchases  NumCatalogPurchases  NumStorePurchases  \\\n",
       "1361                7                    5                 11   \n",
       "1558                7                    2                 10   \n",
       "1054                3                    2                  4   \n",
       "123                 4                    2                  9   \n",
       "1869                2                    0                  3   \n",
       "1325                2                    0                  3   \n",
       "\n",
       "      NumWebVisitsMonth  AcceptedCmp3  AcceptedCmp4  AcceptedCmp5  \\\n",
       "1361                  5             0             0             0   \n",
       "1558                  6             0             0             0   \n",
       "1054                  5             0             0             0   \n",
       "123                   4             0             0             0   \n",
       "1869                  7             0             0             0   \n",
       "1325                  6             0             0             0   \n",
       "\n",
       "      AcceptedCmp1  AcceptedCmp2  Response  Complain Country  Join_year  \\\n",
       "1361             0             0         0         0      SA       2013   \n",
       "1558             0             0         0         0      SP       2012   \n",
       "1054             0             0         0         0     GER       2013   \n",
       "123              0             0         1         0      SP       2013   \n",
       "1869             0             0         0         0      SP       2013   \n",
       "1325             0             0         0         0      SP       2013   \n",
       "\n",
       "      Join_month  Join_weekday  Minorhome  Total_Mnt  Total_num_purchase  \\\n",
       "1361           7             6          1        779                  31   \n",
       "1558          12             6          0        794                  27   \n",
       "1054           2             6          1        209                  17   \n",
       "123           10             3          1        455                  24   \n",
       "1869           3             5          1         51                  14   \n",
       "1325           6             0          1         46                  13   \n",
       "\n",
       "      Total_accept        AOV  \n",
       "1361             0  25.129032  \n",
       "1558             0  29.407407  \n",
       "1054             0  12.294118  \n",
       "123              1  18.958333  \n",
       "1869             0   3.642857  \n",
       "1325             0   3.538462  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.sample(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2fc611b5",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "6f3afb0a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Year_Birth', 'Education', 'Marital_Status', 'Income', 'Kidhome',\n",
       "       'Teenhome', 'Dt_Customer', 'Recency', 'MntWines', 'MntFruits',\n",
       "       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
       "       'MntGoldProds', 'NumDealsPurchases', 'NumWebPurchases',\n",
       "       'NumCatalogPurchases', 'NumStorePurchases', 'NumWebVisitsMonth',\n",
       "       'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',\n",
       "       'AcceptedCmp2', 'Response', 'Complain', 'Country', 'Join_year',\n",
       "       'Join_month', 'Join_weekday', 'Minorhome', 'Total_Mnt',\n",
       "       'Total_num_purchase', 'Total_accept', 'AOV'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "new_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bc8def3",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "cb317c46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Year_Birth', 'Education', 'Marital_Status', 'Income', 'Kidhome',\n",
       "       'Teenhome', 'Dt_Customer', 'Recency', 'MntWines', 'MntFruits',\n",
       "       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
       "       'MntGoldProds', 'NumDealsPurchases', 'NumWebPurchases',\n",
       "       'NumCatalogPurchases', 'NumStorePurchases', 'NumWebVisitsMonth',\n",
       "       'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',\n",
       "       'AcceptedCmp2', 'Response', 'Complain', 'Country', 'Join_year',\n",
       "       'Join_month', 'Join_weekday', 'Minorhome', 'Total_Mnt',\n",
       "       'Total_num_purchase', 'Total_accept', 'AOV'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "new_df.columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f134f103",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b91620ff",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'new_df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [1]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01mscipy\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mstats\u001b[39;00m \u001b[38;5;28;01mimport\u001b[39;00m pearsonr\n\u001b[1;32m----> 3\u001b[0m r, p_value  \u001b[38;5;241m=\u001b[39m  pearsonr(x\u001b[38;5;241m=\u001b[39m\u001b[43mnew_df\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mComplain\u001b[39m\u001b[38;5;124m'\u001b[39m], y\u001b[38;5;241m=\u001b[39mnew_df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mTotal_Mnt\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m      5\u001b[0m \u001b[38;5;66;03m# print results\u001b[39;00m\n\u001b[0;32m      6\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mPearson correlation (r): \u001b[39m\u001b[38;5;124m'\u001b[39m, r)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'new_df' is not defined"
     ]
    }
   ],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "eed0edb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df[new_df.Complain > 0].ID.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "d5c3bd17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c60b101b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "new_df.NumStorePurchases.hist()\n",
    "plt.title(\"Distribution of the number of store purchases\");\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "6d1983d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error: 0.7699404761904763\n",
      "Mean Squared Error: 1.3147540178571429\n",
      "Root Mean Squared Error: 1.146627235790753\n"
     ]
    }
   ],
   "source": [
    "# drop ID as everyone has unique ID\n",
    "rd_df = new_df.drop(columns=['ID', 'Dt_Customer'])\n",
    "rd_df.replace([np.inf, -np.inf], 0, inplace=True)\n",
    "\n",
    "# One-hot encoding\n",
    "rd_df = pd.get_dummies(rd_df)\n",
    "\n",
    "# Import train_test_split function\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X=rd_df.drop(columns=['NumStorePurchases'])  # Features\n",
    "y=rd_df['NumStorePurchases']  # Labels\n",
    "\n",
    "# Split dataset into training set and test set\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) \n",
    "# 70% training and 30% test\n",
    "\n",
    "#Import Random Forest Model\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "#Create a Random Forest Classifier with 100 trees\n",
    "rg = RandomForestRegressor(n_estimators=200, n_jobs=-1)\n",
    "\n",
    "#Train the model using the training sets y_pred=clf.predict(X_test)\n",
    "rg.fit(X_train, y_train)\n",
    "\n",
    "y_pred=rg.predict(X_test)\n",
    "\n",
    "from sklearn import metrics\n",
    "\n",
    "print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\n",
    "print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\n",
    "print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "c06efbd1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# find feature importance scores\n",
    "import pandas as pd\n",
    "feature_imp = pd.Series(rg.feature_importances_, \n",
    "        index = list(X.columns)).sort_values(ascending=False)\n",
    "\n",
    "feature_imp = feature_imp[:10]\n",
    "\n",
    "# Creating a bar plot\n",
    "plt.figure(figsize = (7, 7))\n",
    "sb.barplot(x=feature_imp[:10], y=feature_imp.index[:10])\n",
    "# Add labels to your graph\n",
    "plt.xlabel('Feature Importance Score')\n",
    "plt.ylabel('Features')\n",
    "plt.title(\"Visualizing Top 10 Important Features\")\n",
    "plt.savefig('important_feautres.png', bbox_inches='tight')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "c58b65c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "store_shoppers = new_df[new_df.NumStorePurchases>0]\n",
    "store_shoppers = store_shoppers[store_shoppers.AOV <= (store_shoppers.AOV.mean()+3*store_shoppers.AOV.std())]\n",
    "store_shoppers['Type of shopper'] = \"In-store\"\n",
    "other_shoppers = new_df[new_df.NumStorePurchases==0]\n",
    "other_shoppers['Type of shopper'] = \"Other\"\n",
    "\n",
    "plt.figure(figsize = (5, 6))\n",
    "all_shoppers = store_shoppers.append(other_shoppers)\n",
    "plt.title(\"Do in-store shoppers have a higher average order volume?\")\n",
    "sb.boxplot(data = all_shoppers, x = 'Type of shopper', y = 'AOV')\n",
    "plt.ylabel(\"Average Order Volume\")\n",
    "plt.savefig('AOV.png', bbox_inches='tight')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "6c18281f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "# Visualize MntGoldProds vs NumStorePurchases\n",
    "all_shoppers.plot(x='AOV', y='NumStorePurchases', kind='scatter')\n",
    "plt.title(\"AOV vs NumStorePurchases\");\n",
    "plt.savefig('AOV vs NumStorePurchases.png', bbox_inches='tight')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "bc4d22f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearson correlation (r):  0.5505389394031128\n",
      "Pearson p-value:  2.0526348645442993e-177\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import pearsonr\n",
    "all_shoppers.replace([np.inf, -np.inf], 0, inplace=True)\n",
    "r, p_value  =  pearsonr(x=all_shoppers['AOV'], y=all_shoppers['NumStorePurchases'])\n",
    "\n",
    "# print results\n",
    "print('Pearson correlation (r): ', r)\n",
    "print('Pearson p-value: ', p_value)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "6405386f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize MntGoldProds vs NumStorePurchases\n",
    "new_df.plot(x='MntGoldProds', y='NumStorePurchases', kind='scatter')\n",
    "plt.title(\"MntGoldProds vs NumStorePurchases\");\n",
    "plt.savefig('MntGoldProds vs NumStorePurchases.png', bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "56c87257",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearson correlation (r):  0.383264186347043\n",
      "Pearson p-value:  3.4668974417790955e-79\n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import pearsonr\n",
    "\n",
    "r, p_value  =  pearsonr(x=new_df['MntGoldProds'], y=new_df['NumStorePurchases'])\n",
    "\n",
    "# print results\n",
    "print('Pearson correlation (r): ', r)\n",
    "print('Pearson p-value: ', p_value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "ea9b24db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gold_above_avg =  new_df[new_df.MntGoldProds > new_df.MntGoldProds.mean()]\n",
    "gold_above_avg['Gold Purchases Amount'] = \"Above Average\"\n",
    "gold_equ_or_below_avg =  new_df[new_df.MntGoldProds <= new_df.MntGoldProds.mean()]\n",
    "gold_equ_or_below_avg['Gold Purchases Amount'] = \"Equals or Below Average\"\n",
    "\n",
    "plt.figure(figsize = (4, 5))\n",
    "df_gold = gold_above_avg.append(gold_equ_or_below_avg)\n",
    "plt.title(\"2 Gold Purchases Groups\")\n",
    "sb.boxplot(data = df_gold, x = 'Gold Purchases Amount', y = 'NumStorePurchases')\n",
    "plt.ylabel(\"Number of In-Store Purchases\");\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "16636c27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Year_Birth', 'Education', 'Marital_Status', 'Income', 'Kidhome',\n",
       "       'Teenhome', 'Dt_Customer', 'Recency', 'MntWines', 'MntFruits',\n",
       "       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
       "       'MntGoldProds', 'NumDealsPurchases', 'NumWebPurchases',\n",
       "       'NumCatalogPurchases', 'NumStorePurchases', 'NumWebVisitsMonth',\n",
       "       'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',\n",
       "       'AcceptedCmp2', 'Response', 'Complain', 'Country', 'Join_year',\n",
       "       'Join_month', 'Join_weekday', 'Minorhome', 'Total_Mnt',\n",
       "       'Total_num_purchase', 'Total_accept', 'AOV'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "162d7044",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 288x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# divide the data into two groups: married PhD and the rest\n",
    "married_phd = new_df[(new_df.Education == \"PhD\") & (new_df.Marital_Status == \"Married\")]\n",
    "married_phd['label'] = \"Married PhD\"\n",
    "the_rest = new_df[(new_df.Education != \"PhD\") | (new_df.Marital_Status != \"Married\")]\n",
    "the_rest['label'] = \"The rest\"\n",
    "\n",
    "df_combined = married_phd.append(the_rest)\n",
    "plt.figure(figsize = (4, 5))\n",
    "plt.title(\"Married PhD vs the rest\")\n",
    "sb.boxplot(data = df_combined, x = 'label', y = 'MntFishProducts')\n",
    "plt.ylabel(\"Amount spent on fish products\");\n",
    "plt.savefig('Married PhD vs the rest.png', bbox_inches='tight')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "76b2e199",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.stats import ttest_ind \n",
    "pval = ttest_ind(married_phd.MntFishProducts, the_rest.MntFishProducts).pvalue\n",
    "print(\"T-test p-value: \", pval)\n",
    "new_df[[\"AcceptedCmp1\", \"AcceptedCmp2\",\"AcceptedCmp3\",\"AcceptedCmp4\",\"AcceptedCmp5\",\"Response\"]].sum().sort_values().plot.barh()\n",
    "plt.title(\"Which marketing campaign is most successful?\")\n",
    "plt.xlabel(\"Offer Accepted\");\n",
    "plt.ylabel(\"Campaign\")\n",
    "plt.savefig('Which marketing campaign is most successful.png', bbox_inches='tight')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "d6ad9cdc",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df.replace([np.inf, -np.inf], 0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "cc5d3f94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                     5.590726e+03\n",
       "Year_Birth             1.968902e+03\n",
       "Income                 5.168167e+06\n",
       "Kidhome                4.443451e-01\n",
       "Teenhome               5.064819e-01\n",
       "Recency                4.910460e+01\n",
       "MntWines               3.039955e+02\n",
       "MntFruits              2.627045e+01\n",
       "MntMeatProducts        1.669169e+02\n",
       "MntFishProducts        3.752302e+01\n",
       "MntSweetProducts       2.706884e+01\n",
       "MntGoldProds           4.396871e+01\n",
       "NumDealsPurchases      2.326777e+00\n",
       "NumWebPurchases        4.087170e+00\n",
       "NumCatalogPurchases    2.662494e+00\n",
       "NumStorePurchases      5.794367e+00\n",
       "NumWebVisitsMonth      5.319177e+00\n",
       "AcceptedCmp3           7.286544e-02\n",
       "AcceptedCmp4           7.465355e-02\n",
       "AcceptedCmp5           7.241842e-02\n",
       "AcceptedCmp1           6.437193e-02\n",
       "AcceptedCmp2           1.341082e-02\n",
       "Response               1.493071e-01\n",
       "Complain               8.940545e-03\n",
       "Join_year              2.013028e+03\n",
       "Join_month             6.518552e+00\n",
       "Join_weekday           3.021457e+00\n",
       "Minorhome              9.508270e-01\n",
       "Total_Mnt              6.057434e+02\n",
       "Total_num_purchase     2.018999e+01\n",
       "Total_accept           4.738489e-01\n",
       "AOV                    2.684283e+01\n",
       "dtype: float64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "ad5bb99b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Channel')"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "new_df[[\"NumWebPurchases\", \"NumCatalogPurchases\", \"NumStorePurchases\"]].sum().sort_values().plot.barh()\n",
    "plt.title(\"Which marketing channels are underperforming?\")\n",
    "plt.xlabel(\"Total number of purchases\")\n",
    "plt.ylabel(\"Channel\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "e1d91553",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(334, 2207)"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create 2 groups that accepted the offers from the last campaign and the campaign 1-5\n",
    "cp_last = new_df[new_df.Response > 0]\n",
    "cp__the_rest = new_df[new_df.AcceptedCmp2 == 0]\n",
    "\n",
    "cp_last.shape[0], cp__the_rest.shape[0]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "1f54cd8e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SP     1094\n",
       "SA      336\n",
       "CA      268\n",
       "AUS     160\n",
       "IND     147\n",
       "GER     120\n",
       "US      109\n",
       "ME        3\n",
       "Name: Country, dtype: int64"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.Country.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "61450dd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(334, 1893)"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# remove the overlapping customers who accepted offers from both cp_last and cp__the_rest \n",
    "# so that twe can see the clear differences between these two groups\n",
    "cp__the_rest2 = cp__the_rest\n",
    "for i in list(cp__the_rest.ID):\n",
    "    if i in list(cp_last.ID):\n",
    "        cp__the_rest2 = cp__the_rest2[cp__the_rest2.ID != i]\n",
    "        \n",
    "cp_last.shape[0], cp__the_rest2.shape[0]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "a90fdfb7",
   "metadata": {},
   "outputs": [],
   "source": [
    "cp_last = cp_last[['Year_Birth', 'Income', 'Minorhome', 'Country', 'Join_month', 'Join_weekday',\n",
    "                  'MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
    "                  'NumWebPurchases', 'NumCatalogPurchases', 'NumStorePurchases',\n",
    "                  'Total_Mnt', 'Total_num_purchase', 'AOV']]\n",
    "cp__the_rest2 = cp__the_rest2[['Year_Birth', 'Income', 'Minorhome', 'Country', 'Join_month', 'Join_weekday',\n",
    "                  'MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
    "                  'NumWebPurchases', 'NumCatalogPurchases', 'NumStorePurchases',\n",
    "                  'Total_Mnt', 'Total_num_purchase', 'AOV']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "689337dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year_Birth             1.969416e+03\n",
       "Income                 6.003095e+06\n",
       "Minorhome              6.467066e-01\n",
       "Join_month             6.703593e+00\n",
       "Join_weekday           2.712575e+00\n",
       "MntWines               5.027036e+02\n",
       "MntFruits              3.820359e+01\n",
       "MntMeatProducts        2.943533e+02\n",
       "MntFishProducts        5.205090e+01\n",
       "MntSweetProducts       3.863473e+01\n",
       "NumWebPurchases        5.071856e+00\n",
       "NumCatalogPurchases    4.203593e+00\n",
       "NumStorePurchases      6.095808e+00\n",
       "Total_Mnt              9.873922e+02\n",
       "Total_num_purchase     2.300000e+01\n",
       "AOV                    4.182920e+01\n",
       "dtype: float64"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "cp_last.mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "446b682c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year_Birth             1.968902e+03\n",
       "Income                 5.168167e+06\n",
       "Minorhome              9.508270e-01\n",
       "Join_month             6.518552e+00\n",
       "Join_weekday           3.021457e+00\n",
       "MntWines               3.039955e+02\n",
       "MntFruits              2.627045e+01\n",
       "MntMeatProducts        1.669169e+02\n",
       "MntFishProducts        3.752302e+01\n",
       "MntSweetProducts       2.706884e+01\n",
       "NumWebPurchases        4.087170e+00\n",
       "NumCatalogPurchases    2.662494e+00\n",
       "NumStorePurchases      5.794367e+00\n",
       "Total_Mnt              6.057434e+02\n",
       "Total_num_purchase     2.018999e+01\n",
       "AOV                    2.684283e+01\n",
       "dtype: float64"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df2 = new_df[['Year_Birth', 'Income', 'Minorhome', 'Country', 'Join_month', 'Join_weekday',\n",
    "                  'MntWines', 'MntFruits', 'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
    "                  'NumWebPurchases', 'NumCatalogPurchases', 'NumStorePurchases',\n",
    "                  'Total_Mnt', 'Total_num_purchase', 'AOV']]\n",
    "new_df2.mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "518c27c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize the differences\n",
    "plt.figure(figsize = (9, 7))\n",
    "value1 = pd.DataFrame((((cp_last.mean()) - new_df2.mean()) / new_df2.mean())*100)\n",
    "value1.dropna(inplace = True)\n",
    "value1.sort_values(by=0,inplace = True)\n",
    "value1['positive'] = value1[0] >=0\n",
    "value1[0].plot(kind='barh', color=value1.positive.map({True: 'navy', False: 'orange'}))\n",
    "plt.title(\"Customer Characteristics Comparison - Customer in last campaign vs Average customer\")\n",
    "plt.xlabel(\"Difference in %\")\n",
    "plt.ylabel(\"Characteristics\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "88397ee7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year_Birth             1.968807e+03\n",
       "Income                 5.013577e+06\n",
       "Minorhome              1.005283e+00\n",
       "Join_month             6.484416e+00\n",
       "Join_weekday           3.071315e+00\n",
       "MntWines               2.658368e+02\n",
       "MntFruits              2.426783e+01\n",
       "MntMeatProducts        1.443587e+02\n",
       "MntFishProducts        3.499630e+01\n",
       "MntSweetProducts       2.511252e+01\n",
       "NumWebPurchases        3.918119e+00\n",
       "NumCatalogPurchases    2.384046e+00\n",
       "NumStorePurchases      5.728473e+00\n",
       "Total_Mnt              5.354918e+02\n",
       "Total_num_purchase     1.968199e+01\n",
       "AOV                    2.408306e+01\n",
       "dtype: float64"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cp__the_rest2.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "9daa47e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# visualize the differences\n",
    "plt.figure(figsize = (9, 7))\n",
    "value = pd.DataFrame((((cp_last.mean()) - cp__the_rest2.mean()) / cp__the_rest2.mean())*100)\n",
    "value.dropna(inplace = True)\n",
    "value.sort_values(by=0,inplace = True)\n",
    "value['positive'] = value[0] >=0\n",
    "value[0].plot(kind='barh', color=value.positive.map({True: 'navy', False: 'orange'}))\n",
    "plt.title(\"Customer Characteristics Comparison - The last campaign vs Campaign 1-5\")\n",
    "plt.xlabel(\"Difference in %\")\n",
    "plt.ylabel(\"Characteristics\")\n",
    "plt.savefig('Customer Characteristics Comparison - The last campaign vs Campaign 1-5', bbox_inches='tight');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "e4f1ec7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AUS</th>\n",
       "      <td>6.886228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CA</th>\n",
       "      <td>11.377246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GER</th>\n",
       "      <td>5.089820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IND</th>\n",
       "      <td>3.892216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ME</th>\n",
       "      <td>0.598802</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SA</th>\n",
       "      <td>15.568862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SP</th>\n",
       "      <td>52.694611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>US</th>\n",
       "      <td>3.892216</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Percent\n",
       "AUS   6.886228\n",
       "CA   11.377246\n",
       "GER   5.089820\n",
       "IND   3.892216\n",
       "ME    0.598802\n",
       "SA   15.568862\n",
       "SP   52.694611\n",
       "US    3.892216"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cp_last_country = pd.DataFrame((cp_last.Country.value_counts()/cp_last.shape[0])*100)\n",
    "cp_last_country.rename(columns={'Country':'Percent'}, inplace=True)\n",
    "cp_last_country['country'] = cp_last_country.index\n",
    "cp_last_country = cp_last_country.sort_values('country')\n",
    "cp_last_country.drop(['country'], axis=1, inplace=True)\n",
    "cp_last_country\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "4d7e0e49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>AUS</th>\n",
       "      <td>7.237190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CA</th>\n",
       "      <td>12.097200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GER</th>\n",
       "      <td>5.335446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IND</th>\n",
       "      <td>7.025885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ME</th>\n",
       "      <td>0.052826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SA</th>\n",
       "      <td>14.896989</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SP</th>\n",
       "      <td>48.283148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>US</th>\n",
       "      <td>5.071315</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Percent\n",
       "AUS   7.237190\n",
       "CA   12.097200\n",
       "GER   5.335446\n",
       "IND   7.025885\n",
       "ME    0.052826\n",
       "SA   14.896989\n",
       "SP   48.283148\n",
       "US    5.071315"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cp__the_rest2_country = pd.DataFrame((cp__the_rest2.Country.value_counts()/cp__the_rest2.shape[0])*100)\n",
    "cp__the_rest2_country.rename(columns={'Country':'Percent'}, inplace=True)\n",
    "cp__the_rest2_country['country'] = cp__the_rest2_country.index\n",
    "cp__the_rest2_country = cp__the_rest2_country.sort_values('country')\n",
    "cp__the_rest2_country.drop(['country'], axis=1, inplace=True)\n",
    "cp__the_rest2_country\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "39e9b76d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "country_final = cp_last_country-cp__the_rest2_country\n",
    "\n",
    "# visualize the differences\n",
    "plt.figure(figsize = (9, 7))\n",
    "country_final.sort_values(by=\"Percent\",inplace = True)\n",
    "country_final['positive'] = country_final[\"Percent\"] >=0\n",
    "country_final[\"Percent\"].plot(kind='barh', color=country_final.positive.map({True: 'navy', False: 'orange'}))\n",
    "plt.title(\"Country Percent Comparison - The last campaign vs Campaign 1-5\")\n",
    "plt.xlabel(\"Difference in %\")\n",
    "plt.ylabel(\"Country\")\n",
    "plt.savefig('Country Percent Comparison - The last campaign vs Campaign 1-5', bbox_inches='tight');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "f05606dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SP     1094\n",
       "SA      336\n",
       "CA      268\n",
       "AUS     160\n",
       "IND     147\n",
       "GER     120\n",
       "US      109\n",
       "ME        3\n",
       "Name: Country, dtype: int64"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "new_df.Country.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "dc13430e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x648 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# select columns to plot\n",
    "new_df2 = new_df[new_df.AOV <= (new_df.AOV.mean()+3*new_df.AOV.std())]\n",
    "new_df2.replace([np.inf, -np.inf], 0, inplace=True)\n",
    "new_df2 = new_df2[new_df2.Total_num_purchase <= (new_df2.Total_num_purchase.mean()+3*new_df2.Total_num_purchase.std())]\n",
    "new_df2 = new_df2[new_df2.Total_Mnt <= (new_df2.Total_Mnt.mean()+3*new_df2.Total_Mnt.std())]\n",
    "\n",
    "df_to_plot = new_df2[['Income', 'Total_Mnt','Total_num_purchase', 'AOV']]\n",
    "df_to_plot.rename(columns={'Total_num_purchase':'Total_Purchases'}, inplace=True)\n",
    "\n",
    "# create heatmap\n",
    "plt.figure(figsize = (12, 9))\n",
    "s = sb.heatmap(df_to_plot.corr(),  annot = True,cmap = 'RdBu',vmin = -1, vmax = 1,center = 0)\n",
    "s.set_yticklabels(s.get_yticklabels(), rotation = 0, fontsize = 12)\n",
    "s.set_xticklabels(s.get_xticklabels(), rotation = 90, fontsize = 12)\n",
    "bottom, top = s.get_ylim()\n",
    "s.set_ylim(bottom + 0.5, top - 0.5)\n",
    "plt.title(\"Correlation Heatmap\")\n",
    "plt.savefig('heatmap2.png', bbox_inches='tight')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "9209d32d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Year_Birth', 'Education', 'Marital_Status', 'Income', 'Kidhome',\n",
       "       'Teenhome', 'Dt_Customer', 'Recency', 'MntWines', 'MntFruits',\n",
       "       'MntMeatProducts', 'MntFishProducts', 'MntSweetProducts',\n",
       "       'MntGoldProds', 'NumDealsPurchases', 'NumWebPurchases',\n",
       "       'NumCatalogPurchases', 'NumStorePurchases', 'NumWebVisitsMonth',\n",
       "       'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',\n",
       "       'AcceptedCmp2', 'Response', 'Complain', 'Country', 'Join_year',\n",
       "       'Join_month', 'Join_weekday', 'Minorhome', 'Total_Mnt',\n",
       "       'Total_num_purchase', 'Total_accept', 'AOV'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "ff51b2f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error: 0.4251912556689343\n",
      "Mean Squared Error: 0.4968302545773269\n",
      "Root Mean Squared Error: 0.7048618691469464\n"
     ]
    }
   ],
   "source": [
    "# drop ID as everyone has unique ID\n",
    "rd_df = new_df.drop(columns=['ID', 'Dt_Customer','AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'AcceptedCmp1',\n",
    "       'AcceptedCmp2', 'Response'])\n",
    "rd_df.replace([np.inf, -np.inf], 0, inplace=True)\n",
    "\n",
    "# One-hot encoding\n",
    "rd_df = pd.get_dummies(rd_df)\n",
    "\n",
    "# Import train_test_split function\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X=rd_df.drop(columns=['Total_accept'])  # Features\n",
    "y=rd_df['Total_accept']  # Labels\n",
    "\n",
    "# Split dataset into training set and test set\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) \n",
    "# 70% training and 30% test\n",
    "\n",
    "#Import Random Forest Model\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "#Create a Random Forest Classifier with 100 trees\n",
    "rg2 = RandomForestRegressor(n_estimators=200, n_jobs=-1)\n",
    "\n",
    "#Train the model using the training sets y_pred=clf.predict(X_test)\n",
    "rg2.fit(X_train, y_train)\n",
    "\n",
    "y_pred=rg2.predict(X_test)\n",
    "\n",
    "from sklearn import metrics\n",
    "\n",
    "print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))\n",
    "print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))\n",
    "print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "65df42b3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MntWines vs Total_accept:\n",
      "Pearson correlation (r):  0.4787761368904706\n",
      "Pearson p-value:  1.538453690271273e-128\n",
      " \n",
      "MntMeatProducts vs Total_accept:\n",
      "Pearson correlation (r):  0.30103342502969976\n",
      "Pearson p-value:  4.4065093290159594e-48\n",
      " \n",
      "MntGoldProds vs Total_accept:\n",
      "Pearson correlation (r):  0.19068006658523506\n",
      "Pearson p-value:  9.275051767778576e-20\n",
      " \n",
      "MntFishProducts vs Total_accept:\n",
      "Pearson correlation (r):  0.1591461828125727\n",
      "Pearson p-value:  3.697344094817059e-14\n",
      " \n",
      "MntFruits vs Total_accept:\n",
      "Pearson correlation (r):  0.1497632666014454\n",
      "Pearson p-value:  1.082631664111806e-12\n",
      " \n",
      "MntSweetProducts vs Total_accept:\n",
      "Pearson correlation (r):  0.17808985183102097\n",
      "Pearson p-value:  2.1328375413163002e-17\n",
      " \n"
     ]
    }
   ],
   "source": [
    "from scipy.stats import pearsonr\n",
    "\n",
    "list_ = ['MntWines', 'MntMeatProducts','MntGoldProds', 'MntFishProducts', 'MntFruits',  'MntSweetProducts']\n",
    "for i in list_:\n",
    "    r, p_value  =  pearsonr(x=new_df[i], y=new_df['Total_accept'])\n",
    "    print(i, \"vs Total_accept:\")\n",
    "    # print results\n",
    "    print('Pearson correlation (r): ', r)\n",
    "    print('Pearson p-value: ', p_value)\n",
    "    print(\" \")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "f434a5a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# find feature importance scores\n",
    "import pandas as pd\n",
    "feature_imp = pd.Series(rg2.feature_importances_, \n",
    "        index = list(X.columns)).sort_values(ascending=False)\n",
    "\n",
    "feature_imp = feature_imp[:10]\n",
    "\n",
    "# Creating a bar plot\n",
    "plt.figure(figsize = (7, 7))\n",
    "sb.barplot(x=feature_imp[:10], y=feature_imp.index[:10])\n",
    "# Add labels to your graph\n",
    "plt.xlabel('Feature Importance Score')\n",
    "plt.ylabel('Factors')\n",
    "plt.title(\"Top 10 Important Factors of Accepting Campaign Offers\")\n",
    "plt.savefig('important_feautres.png', bbox_inches='tight')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "e0e78cef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Join_month      6.518552\n",
       "Join_weekday    3.021457\n",
       "dtype: float64"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df[['Join_month', 'Join_weekday']].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b162bc77",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
